<Application x:Class="CheckComboBoxSample.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:CheckComboBoxSample.MVVM.Controls"
             xmlns:local="clr-namespace:CheckComboBoxSample"
             xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <system:Double x:Key="TextFontSize">12</system:Double>
            <system:Double x:Key="DefaultControlHeight">30</system:Double>
            <Thickness x:Key="DefaultControlPadding">10,6</Thickness>
            <CornerRadius x:Key="DefaultCornerRadius">4</CornerRadius>

            <BooleanToVisibilityConverter x:Key="Boolean2VisibilityConverter" />

            <Geometry x:Key="DownGeometry" o:Freeze="True">M512 801.6896L5.12 282.0096l58.1632-59.5968L512 682.3936l448.7168-460.0832 58.1632 59.5968-506.88 519.7824z</Geometry>
            <Geometry x:Key="CloseGeometry" o:Freeze="True">M0.7,0 L5,4.3 L9.3,0 L10,0.7 L5.7,5 L10,9.3 L9.3,10 L5,5.7 L0.7,10 L0,9.3 L4.3,5 L0,0.7 z</Geometry>
            <Geometry x:Key="UpGeometry" o:Freeze="True">M50.000001,0 L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288 z</Geometry>
            <Geometry x:Key="DeleteFillCircleGeometry" o:Freeze="True">M7.4038057,6.4038057 C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123 L10.585787,12 6.6966991,15.889088 C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301 L12,13.414213 15.889088,17.303301 C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088 L13.414213,12 17.303301,8.1109123 C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991 L12,10.585787 8.1109123,6.6966991 C7.9156504,6.5014372 7.6597281,6.4038057 7.4038057,6.4038057 z M12,0 C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0 z</Geometry>
            <Geometry x:Key="DeleteGeometry" o:Freeze="True">M512 620.544l253.3376 253.3376a76.6976 76.6976 0 1 0 108.544-108.544L620.6464 512l253.2352-253.3376a76.6976 76.6976 0 1 0-108.544-108.544L512 403.3536 258.6624 150.1184a76.6976 76.6976 0 1 0-108.544 108.544L403.3536 512 150.1184 765.3376a76.6976 76.6976 0 1 0 108.544 108.544L512 620.6464z</Geometry>
            <Geometry x:Key="CheckedGeometry" o:Freeze="True">M 0,2 3,5 8,0</Geometry>

            <Color x:Key="EffectShadowColor">#88000000</Color>
            <Color x:Key="SecondaryBorderColor">#757575</Color>
            <Color x:Key="PrimaryColor">#326cf3</Color>
            <Color x:Key="DarkPrimaryColor">#326cf3</Color>
            <Color x:Key="PrimaryTextColor">#212121</Color>
            <Color x:Key="BorderColor">#e0e0e0</Color>
            <Color x:Key="TextIconColor">White</Color>
            <Color x:Key="RegionColor">#ffffff</Color>
            <Color x:Key="SecondaryRegionColor">#eeeeee</Color>
            <Color x:Key="DarkMaskColor">#20000000</Color>


            <SolidColorBrush x:Key="RegionBrush"
                             o:Freeze="True"
                             Color="{StaticResource RegionColor}" />
            <SolidColorBrush x:Key="TextIconBrush"
                             o:Freeze="True"
                             Color="{StaticResource TextIconColor}" />
            <SolidColorBrush x:Key="BorderBrush"
                             o:Freeze="True"
                             Color="{StaticResource BorderColor}" />
            <SolidColorBrush x:Key="SecondaryBorderBrush"
                             o:Freeze="True"
                             Color="{StaticResource SecondaryBorderColor}" />
            <SolidColorBrush x:Key="PrimaryTextBrush"
                             o:Freeze="True"
                             Color="{StaticResource PrimaryTextColor}" />
            <SolidColorBrush x:Key="SecondaryRegionBrush"
                             o:Freeze="True"
                             Color="{StaticResource SecondaryRegionColor}" />
            <SolidColorBrush x:Key="DarkMaskBrush"
                             o:Freeze="True"
                             Color="{StaticResource DarkMaskColor}" />

            <SolidColorBrush x:Key="DarkPrimaryBrush"
                             o:Freeze="True"
                             Color="{DynamicResource DarkPrimaryColor}" />
            <LinearGradientBrush x:Key="PrimaryBrush" o:Freeze="True" StartPoint="0,0" EndPoint="1,0">
                <GradientStop o:Freeze="True" Offset="0" Color="{StaticResource PrimaryColor}" />
                <GradientStop o:Freeze="True" Offset="1" Color="{StaticResource DarkPrimaryColor}" />
            </LinearGradientBrush>

            <DropShadowEffect x:Key="EffectShadow2"
                              o:Freeze="True"
                              BlurRadius="8"
                              Direction="270"
                              Opacity=".2"
                              RenderingBias="Performance"
                              ShadowDepth="1.5"
                              Color="{StaticResource EffectShadowColor}" />


            <Style x:Key="RectangleFocusVisual" TargetType="Rectangle">
                <Setter Property="Margin" Value="-2" />
                <Setter Property="Opacity" Value=".6" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Stroke" Value="{StaticResource SecondaryBorderBrush}" />
                <Setter Property="StrokeThickness" Value="2" />
                <Setter Property="StrokeDashArray" Value="1 1" />
            </Style>

            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle RadiusX="4"
                                       RadiusY="4"
                                       Style="{StaticResource RectangleFocusVisual}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BaseStyle" TargetType="Control">
                <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
                <Setter Property="FontSize" Value="{StaticResource TextFontSize}" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            </Style>

            <Style x:Key="ButtonBaseBaseStyle"
                   BasedOn="{StaticResource BaseStyle}"
                   TargetType="ButtonBase">
                <Setter Property="Height" Value="{StaticResource DefaultControlHeight}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
                <Setter Property="Foreground" Value="{StaticResource TextIconBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <Style x:Key="ButtonBaseStyle"
                   BasedOn="{StaticResource ButtonBaseBaseStyle}"
                   TargetType="Button">
                <Setter Property="Background" Value="{StaticResource RegionBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <StackPanel>
                                <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource DefaultCornerRadius}" />
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{StaticResource DefaultCornerRadius}">
                                    <StackPanel Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Orientation="Horizontal">
                                        <Path x:Name="PathMain"
                                              Data="{TemplateBinding controls:IconElement.Geometry}"
                                              Fill="{TemplateBinding Foreground}"
                                              SnapsToDevicePixels="True"
                                              Stretch="Uniform" />
                                        <ContentPresenter x:Name="ContentPresenterMain"
                                                          Margin="6,0,0,0"
                                                          VerticalAlignment="Center"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="controls:IconElement.Geometry" Value="{x:Null}">
                                    <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value=".9" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value=".6" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="CheckBoxBaseStyle"
                   BasedOn="{StaticResource BaseStyle}"
                   TargetType="CheckBox">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Opacity=".6"
                                                   RadiusX="4"
                                                   RadiusY="4"
                                                   SnapsToDevicePixels="true"
                                                   Stroke="{StaticResource SecondaryBorderBrush}"
                                                   StrokeDashArray="1 1"
                                                   StrokeThickness="2" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="6,0,0,0" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="StoryboardCheckedTrue">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="StoryboardCheckedFalse">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="8" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="templateRoot"
                                  Background="Transparent"
                                  SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder"
                                        Width="16"
                                        Height="16"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="2" />
                                <StackPanel x:Name="markGrid"
                                            Grid.Column="0"
                                            Width="16"
                                            Height="16">
                                    <Path x:Name="path"
                                          Width="12"
                                          Height="12"
                                          Data="{StaticResource CheckedGeometry}"
                                          FlowDirection="LeftToRight"
                                          Stretch="Uniform"
                                          Stroke="{StaticResource TextIconBrush}"
                                          StrokeDashArray="8,8"
                                          StrokeDashOffset="8"
                                          StrokeThickness="2"
                                          UseLayoutRounding="True" />
                                    <Rectangle x:Name="indeterminateMark"
                                               Margin="2"
                                               Fill="{StaticResource PrimaryBrush}"
                                               Opacity="0"
                                               RadiusX="2"
                                               RadiusY="2" />
                                </StackPanel>
                                <ContentPresenter x:Name="contentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Visibility="Collapsed" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" Value="{StaticResource SecondaryBorderBrush}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="true" />
                                        <Condition Property="IsPressed" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" Value=".8" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="false" />
                                        <Condition Property="IsPressed" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedTrue}" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedFalse}" />
                                    </Trigger.ExitActions>
                                    <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                                    <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource DarkPrimaryBrush}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="path" Property="Stroke" Value="{StaticResource BorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.4" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--<Style BasedOn="{StaticResource CheckBoxBaseStyle}" TargetType="CheckBox" />-->



            <Style x:Key="ListBoxItemBaseStyle" TargetType="ListBoxItem">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="2,0" />
                <Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="Bd"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <CheckBox MinHeight="{TemplateBinding MinHeight}"
                                          HorizontalAlignment="Stretch"
                                          FocusVisualStyle="{x:Null}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          Style="{StaticResource CheckBoxBaseStyle}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                </CheckBox>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="{StaticResource SecondaryRegionBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="ClickMode" Value="Press" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource DefaultCornerRadius}"
                                    SnapsToDevicePixels="true">
                                <Border Width="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                        Margin="0,0,6,0"
                                        HorizontalAlignment="Right"
                                        BorderBrush="Transparent"
                                        BorderThickness="1"
                                        SnapsToDevicePixels="true">
                                    <Path x:Name="arrow"
                                          Width="16"
                                          Height="9"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="{StaticResource DownGeometry}"
                                          Fill="{TemplateBinding BorderBrush}"
                                          Stretch="Uniform" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="arrow" Property="Data" Value="{StaticResource UpGeometry}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value=".4" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CheckComboBoxToggleButton"
                   BasedOn="{StaticResource ComboBoxToggleButton}"
                   TargetType="ToggleButton">
                <Setter Property="ClickMode" Value="Release" />
            </Style>

            <Style x:Key="ButtonIcon"
                   BasedOn="{StaticResource ButtonBaseStyle}"
                   TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="0">
                                <ContentControl Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <Path Data="{TemplateBinding controls:IconElement.Geometry}"
                                          Fill="{TemplateBinding Foreground}"
                                          SnapsToDevicePixels="True"
                                          Stretch="Uniform" />
                                </ContentControl>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RectangleFocusVisualCircular"
                   BasedOn="{StaticResource RectangleFocusVisual}"
                   TargetType="Rectangle" />

            <Style x:Key="TagBaseStyle"
                   BasedOn="{StaticResource BaseStyle}"
                   TargetType="controls:Tag">
                <Setter Property="Background" Value="{StaticResource SecondaryRegionBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Height" Value="{StaticResource DefaultControlHeight}" />
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Style="{StaticResource RectangleFocusVisualCircular}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="controls:Tag">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource DefaultCornerRadius}"
                                    SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Button Name="ButtonClose"
                                            Grid.Column="1"
                                            Width="16"
                                            Margin="0,0,6,0"
                                            Padding="0,11"
                                            controls:IconElement.Geometry="{StaticResource DeleteGeometry}"
                                            Command="ApplicationCommands.Close"
                                            Focusable="False"
                                            Foreground="{TemplateBinding Foreground}"
                                            Style="{StaticResource ButtonIcon}"
                                            Visibility="{TemplateBinding ShowCloseButton,
                                                                         Converter={StaticResource Boolean2VisibilityConverter}}" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="ButtonClose" Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonClose" Property="controls:IconElement.Geometry" Value="{StaticResource DeleteFillCircleGeometry}" />
                                    <Setter TargetName="ButtonClose" Property="Padding" Value="0,6" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource DarkMaskBrush}" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
                        <Setter Property="Foreground" Value="{StaticResource TextIconBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="Tag4CheckComboBoxStyle"
                   BasedOn="{StaticResource TagBaseStyle}"
                   TargetType="controls:Tag">
                <Setter Property="Padding" Value="6,3,4,3" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="controls:Tag">
                            <Border Margin="{TemplateBinding Margin}"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource DefaultCornerRadius}"
                                    SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Button Name="ButtonClose"
                                            Grid.Column="1"
                                            Width="16"
                                            Height="16"
                                            Margin="10,0,0,0"
                                            Padding="0,4"
                                            controls:IconElement.Geometry="{StaticResource CloseGeometry}"
                                            Command="ApplicationCommands.Close"
                                            Focusable="False"
                                            Foreground="{TemplateBinding Foreground}"
                                            Style="{StaticResource ButtonIcon}"
                                            Visibility="{TemplateBinding ShowCloseButton,
                                                                         Converter={StaticResource Boolean2VisibilityConverter}}" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="ButtonClose" Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonClose" Property="controls:IconElement.Geometry" Value="{StaticResource DeleteFillCircleGeometry}" />
                                    <Setter TargetName="ButtonClose" Property="Padding" Value="0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  滚动条中间区域  -->
            <Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  滚动条中间区域的当前区域  -->
            <Style x:Key="ScrollBarThumb" TargetType="Thumb">
                <Setter Property="Background" Value="#686868" />
                <Setter Property="BorderBrush" Value="#888" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Thumb">
                            <Border Width="6"
                                    Margin="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="3" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!--  鼠标悬浮时的背景  -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#9e9e9e" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  垂直滚动条模板  -->
            <ControlTemplate x:Key="VerticalScrollBarTemplate" TargetType="ScrollBar">
                <Track Name="PART_Track" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </ControlTemplate>

            <!--  下拉列表样式  -->
            <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="ScrollViewer">
                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                            Margin="{TemplateBinding Padding}"
                                            CanContentScroll="{TemplateBinding CanContentScroll}"
                                            CanHorizontallyScroll="False"
                                            CanVerticallyScroll="False"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    <ScrollBar x:Name="PART_VerticalScrollBar"
                               Grid.Column="1"
                               AutomationProperties.AutomationId="VerticalScrollBar"
                               Cursor="Arrow"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               Minimum="0"
                               Template="{StaticResource VerticalScrollBarTemplate}"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                               Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="CheckComboBoxTemplate" TargetType="controls:CheckComboBox">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup"
                           Grid.ColumnSpan="2"
                           AllowsTransparency="true"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                           Placement="Bottom"
                           PlacementTarget="{Binding ElementName=toggleButton}"
                           PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                           StaysOpen="False">
                        <Decorator Margin="8,0">
                            <Border x:Name="dropDownBorder"
                                    MinWidth="{Binding ActualWidth, ElementName=toggleButton}"
                                    MaxWidth="{Binding ActualWidth, ElementName=toggleButton}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Margin="0,0,0,8"
                                    Background="{StaticResource RegionBrush}"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    BorderThickness="0,1,0,0"
                                    CornerRadius="4"
                                    Effect="{StaticResource EffectShadow2}">
                                <controls:ToggleBlock HorizontalContentAlignment="Stretch"
                                                      VerticalContentAlignment="Stretch"
                                                      IsChecked="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                    <controls:ToggleBlock.CheckedContent>
                                        <Grid Margin="0,4" ClipToBounds="False">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <ListBoxItem x:Name="PART_SelectAll"
                                                         HorizontalContentAlignment="Stretch"
                                                         Content="全选"
                                                         IsEnabled="{TemplateBinding ShowSelectAllButton}"
                                                         Style="{TemplateBinding ItemContainerStyle}"
                                                         Visibility="{Binding ShowSelectAllButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />

                                            <ScrollViewer x:Name="DropDownScrollViewer"
                                                          Grid.Row="1"
                                                          MaxHeight="{TemplateBinding DropDownScrollViewerHeight}"
                                                          HorizontalScrollBarVisibility="Disabled"
                                                          Template="{StaticResource ScrollViewerControlTemplate}"
                                                          VerticalScrollBarVisibility="Auto">
                                                <!--<WrapPanel Orientation="Horizontal"
                                                           IsItemsHost="True"
                                                           ScrollViewer.CanContentScroll="True"/>-->
                                                <UniformGrid Columns="4" IsItemsHost="True" />
                                            </ScrollViewer>

                                        </Grid>
                                    </controls:ToggleBlock.CheckedContent>
                                    <controls:ToggleBlock.UnCheckedContent>
                                        <controls:Empty />
                                    </controls:ToggleBlock.UnCheckedContent>
                                </controls:ToggleBlock>
                            </Border>
                        </Decorator>
                    </Popup>
                    <ToggleButton x:Name="toggleButton"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="2"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                  Style="{StaticResource CheckComboBoxToggleButton}" />
                    <Border Grid.Column="0"
                            Margin="-1,1"
                            Padding="3">
                        <WrapPanel x:Name="PART_Panel" MaxHeight="{TemplateBinding MaxDropDownHeight}" />
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="false">
                        <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition SourceName="toggleButton" Property="IsMouseOver" Value="true" />
                            <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="{StaticResource SecondaryBorderBrush}" />
                    </MultiTrigger>
                    <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                        <Setter TargetName="PART_Panel" Property="Opacity" Value="0.4" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="CheckComboBoxBaseStyle" TargetType="controls:CheckComboBox">
                <Setter Property="TagStyle" Value="{StaticResource Tag4CheckComboBoxStyle}" />
                <Setter Property="SelectionMode" Value="Multiple" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="{StaticResource RegionBrush}" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemBaseStyle}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="ScrollViewer.PanningMode" Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Padding" Value="6,3" />
                <Setter Property="Template" Value="{StaticResource CheckComboBoxTemplate}" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <!--<Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>-->
            </Style>
            <Style BasedOn="{StaticResource CheckComboBoxBaseStyle}" TargetType="controls:CheckComboBox" />

            <Style x:Key="ToggleBlockBaseStyle" TargetType="controls:ToggleBlock">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="controls:ToggleBlock">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <StackPanel Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentPresenter Name="ContentPresenterChecked"
                                                      ContentSource="CheckedContent"
                                                      Visibility="Collapsed" />
                                    <ContentPresenter Name="ContentPresenterUnChecked" ContentSource="UnCheckedContent" />
                                    <ContentPresenter Name="ContentPresenterIndeterminate"
                                                      ContentSource="IndeterminateContent"
                                                      Visibility="Collapsed" />
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="ContentPresenterChecked" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="ContentPresenterUnChecked" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ContentPresenterIndeterminate" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="ContentPresenterChecked" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ContentPresenterUnChecked" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="ContentPresenterIndeterminate" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="ContentPresenterChecked" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ContentPresenterUnChecked" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ContentPresenterIndeterminate" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style BasedOn="{StaticResource ToggleBlockBaseStyle}" TargetType="controls:ToggleBlock" />

        </ResourceDictionary>

    </Application.Resources>
</Application>
